4 Statistic
bam_path=/path_to_your_bam/
out_path=/path_to_your_output_dir/
mkdir -p $out_path && cd $out_path

# 4.1 Reads mapped to the genome
# # 4.1.1 read number
echo -e "Sample\tRead_Nums" > all_read_number.txt
for file in $bam_path/*.dd.bam
do
sample=`basename $file | cut -d. -f1`
number=$(samtools stats $bam_path/$file | grep "reads mapped:" | awk '{print $4}') && echo -e "${sample}\t${number}" >> all_read_number.txt &
done
# # 4.1.1 read bases
echo -e "Sample\tBase" > all_read_bases.txt
for file in $bam_path/*.dd.bam
do
sample=`basename $file | cut -d. -f1`
number=$(samtools stats $bam_path/$file | grep "bases mapped (cigar):" | awk '{print $5}') && echo -e "${sample}\t${number}" >> all_read_bases.txt &
done
rm *.overlap_reads.txt

# # 4.2 Reads mapped to target regions
probe_bed=/path_to_BED_of_your_probes/
for file in $bam_path/*.dd.bam
do
sample=`basename $file | cut -d. -f1`
bedtools intersect -a $file -b $probe_bed -wa  | samtools view | cut -f1 | sort | uniq | wc -l | awk '{sum += $1} END {print "Overlap read (1bp):", sum}' > $sample.overlap_reads.txt && bedtools intersect -a $file -b $probe_bed -wa -f 0.5 | samtools view | cut -f1 | sort | uniq | wc -l | awk '{sum += $1} END {print "Overlap Read (50bp):", sum}' >> $sample.overlap_reads.txt &
done

echo -e "SampleID\tOverlap_Read(1bp)\tOverlap_Read(50bp)" > all_overlapreads.txt
for file in *.overlap_reads.txt
do
sample=`basename $file | cut -d. -f1`
awk -v sample="${i}" '/\(1bp\)/ {overlap1 = $4} /\(50bp\)/ {overlap50 = $4} END {print sample "\t" overlap1 "\t" overlap50}' $sample.overlap_reads.txt >> all_overlapreads.txt
done
rm *.overlap_reads.txt

# # 4.3 Coverage in target regions
probe_bed=/path_to_BED_of_your_probes/
for file in $bam_path/*.dd.bam
do
sample=`basename $file | cut -d. -f1`
bedtools coverage -a $probe_bed -b $sample.dd.bam -d > $sample.depth_results.txt && awk 'BEGIN {total_bases = 0; covered_bases = 0} $5 > 0 {covered_bases += 1} {total_bases += 1} END {percentage = (covered_bases / total_bases) * 100; print "Total Bases:", total_bases, "Covered Bases:", covered_bases, "Coverage Percentage:", percentage "%"}' $sample.depth_results.txt > $sample.cov_dep.txt && awk 'BEGIN {total_depth = 0; total_bases = 0} {total_depth += $5; total_bases += 1} END {average_depth = total_depth / total_bases; print "Total Bases:", total_bases, "Total Depth:", total_depth, "Average Depth:", average_depth}' $sample.depth_results.txt >> $sample.cov_dep.txt &
done

echo -e "SampleID\tCovered_bases\tCoverage\tTotal_depth\tAverage_depth" > all_cov_dep.txt
for file in *.cov_dep.txt
do
sample=`basename $file | cut -d. -f1`
awk -v sample="${sample}" '/Coverage Percentage/ {covered_bases = $6; coverage_percentage = $9} /Average Depth/ {total_depth = $6; average_depth = $9} END {print sample "\t" covered_bases "\t" coverage_percentage "\t" total_depth "\t" average_depth}' $sample.cov_dep.txt >> all_cov_dep.txt
done

# # 4.4 Read number per probe between filtered and unfiltered probes
# # # # POPGEN panel BED
filtered_probe=/path_to_your_filtered_probe_BED/
# # # # FUNCGEN panel BED
unfiltered_probe=/path_to_your_unfiltered_probe_BED/
# # # 4.4.1 probes passed filterings
for file in $bam_path/*.dd.bam
do
sample=`basename $file | cut -d. -f1`
bedtools coverage -a $filtered_probe -b $file -f 0.1 > $sample.filtered.probe.depth.txt && awk 'NR==FNR{a[$1":"$2"-"$3]=$4; next} {if (($1":"$2"-"$3) in a) print $1, $2, $3, $4/a[$1":"$2"-"$3]}' $probe_bed $sample.filtered.probe.depth.txt > $sample.filtered.probe.norm.depth.txt &
done
# # # 4.4.2 probes were not subjected to filterings
for file in $bam_path/*.dd.bam
do
sample=`basename $file | cut -d. -f1`
bedtools coverage -a $unfiltered_probe -b $file -f 0.1 > $sample.unfiltered.probe.depth.txt && awk 'NR==FNR{a[$1":"$2"-"$3]=$4; next} {if (($1":"$2"-"$3) in a) print $1, $2, $3, $4/a[$1":"$2"-"$3]}' $probe_bed $sample.unfiltered.probe.depth.txt > $sample.unfiltered.probe.norm.depth.txt &
done

# # 4.5 Average base depth / per probe
# # # 4.5.1 Calculate the depth of probes in each target region: in the FUNCGEN panel some probes are overlapping, meaning some target regions are covered twice by probes which need to be normalized when comparing average base depth among different target regions
# # # probes.bam was generated by mapping all probe sequences to the reference genome using the same approach in 3_remapping.sh
samtools depth probes.bam > base_depth.txt

# # # 4.5.2 probes passed filterings
for file in $bam_path/*.dd.bam
do
sample=`basename $file | cut -d. -f1`
samtools depth -b $filtered_probe $file > $sample.filtered.probe.depth.txt && awk 'NR==FNR{a[$1"-"$2]=$3; next} {if (($1"-"$2) in a) print $1, $2, $3/a[$1"-"$2]}' base_depth.txt $sample.filtered.probe.depth.txt > $sample.filtered.probe.norm.depth.txt && awk 'BEGIN {OFS="\t"} {print $1, $2, $2, $3}' $sample.filtered.probe.norm.depth.txt > $sample.filtered.probe.norm.depth.bed && bedtools map -a $filtered_probe -b $sample.filtered.probe.norm.depth.bed -c 4 -o sum -null 0 | awk '{print $1, $2, $3, $4/($3-$2 + 1)}' > $sample.filtered.averaged_depths.bed &
done
# # # 4.5.3 probes were not subjected to filterings
for file in $bam_path/*.dd.bam
do
sample=`basename $file | cut -d. -f1`
samtools depth -b $unfiltered_probe $file > $sample.unfiltered.probe.depth.txt && awk 'NR==FNR{a[$1"-"$2]=$3; next} {if (($1"-"$2) in a) print $1, $2, $3/a[$1"-"$2]}' base_depth.txt $sample.unfiltered.probe.depth.txt > $sample.unfiltered.probe.norm.depth.txt && awk 'BEGIN {OFS="\t"} {print $1, $2, $2, $3}' $sample.unfiltered.probe.norm.depth.txt > $sample.unfiltered.probe.norm.depth.bed && bedtools map -a $unfiltered_probe -b $sample.unfiltered.probe.norm.depth.bed -c 4 -o sum -null 0 | awk '{print $1, $2, $3, $4/($3-$2 + 1)}' > $sample.unfiltered.averaged_depths.bed &
done
# # # 4.5.4 Normalize according to the total aligned base (the same for the unfiltered panel)
awk '{print $1 "\t" $2 "\t" $3 "\t" $4 * 1}' SingleSoilW-Cap.filtered.averaged_depths.bed > SingleSoilW-Cap.filtered.averaged_depths.norm.bed
awk '{print $1 "\t" $2 "\t" $3 "\t" $4 * 1.0459}' TriSoilW-Cap.filtered.averaged_depths.bed > TriSoilW-Cap.filtered.averaged_depths.norm.bed
awk '{print $1 "\t" $2 "\t" $3 "\t" $4 * 1.2245}' SingleSoilL-Cap.filtered.averaged_depths.bed > SingleSoilL-Cap.filtered.averaged_depths.norm.bed
awk '{print $1 "\t" $2 "\t" $3 "\t" $4 * 1.2813}' TriSoilL-Cap.filtered.averaged_depths.bed > TriSoilL-Cap.filtered.averaged_depths.norm.bed
awk '{print $1 "\t" $2 "\t" $3 "\t" $4 * 2.5618}' SingleSoilC-Cap.filtered.averaged_depths.bed > SingleSoilC-Cap.filtered.averaged_depths.norm.bed
awk '{print $1 "\t" $2 "\t" $3 "\t" $4 * 4.7716}' TriSoilC-Cap.filtered.averaged_depths.bed > TriSoilC-Cap.filtered.averaged_depths.norm.bed

# # # 4.5.5 For significance test with these data see 4_significance_test.py

# # 4.6 Average base depth / per probe and biophysical/biochemical feature
# # # 4.6.1 Average base depth / per probe across all libraries
paste SingleSoilW-Cap.filtered.averaged_depths.norm.bed TriSoilW-Cap.filtered.averaged_depths.norm.bed SingleSoilL-Cap.filtered.averaged_depths.norm.bed TriSoilL-Cap.filtered.averaged_depths.norm.bed SingleSoilC-Cap.filtered.averaged_depths.norm.bed TriSoilC-Cap.filtered.averaged_depths.norm.bed | awk '{sum=0; for(i=4; i<=NF; i+=4) sum+=$i; print $1, $2, $3, sum/(NF/4);}' > filtered.averaged_depths.norm.bed
# # # 4.6.2 For correlation and regression see 4_correlation_regression.py


